#!/bin/bash

APPNAME="{{ my_name }}"
SRCDIR="{{ retronas_root }}/src"
BINDIR="{{ retronas_root }}/bin/$APPNAME"
REPO=https://github.com/Gkiokan/hb-store-cdn-cli-server.git


# Use the binary release
#RELEASE=$( curl -kLs https://api.github.com/repos/Gkiokan/hb-store-cdn-cli-server/releases | jq -r ".[0].assets | map(select(.name | match (\"hb-store-cdn-cli-server-linux\")))[] | .browser_download_url" )
#
#if [ ! -z "${RELEASE}" ]
#then
#    DEST="${BINDIR}/hb-store-cdn-cli-server"
#    curl -JLo"${DEST}" "${RELEASE}"
#    chmod +x "${DEST}"
#fi

[ ! -x /usr/bin/npm ] && echo "npm could not be found" && exit 1

# max version we can build with is node18
npm install -g node@18.20.8
npm install -g npm@10.8.2                                                          

echo "Configuring build directories..."
rm -rf "${SRCDIR}"
mkdir -p "${SRCDIR}"
cd "${SRCDIR}"

echo "Cloning ..."
git clone $REPO $APPNAME
cd $APPNAME

echo "Install Dependencies"
/usr/local/bin/npm install
/usr/local/bin/npm install pkg -g

echo "Set arch (default x86_64)"
MACH=$(uname -m)
case $MACH in
    aarch64|arm*)
        ARCH=linux-arm
        ;;
    *)
        ARCH=linux
        ;;
esac

echo "Building"
/usr/local/bin/npm run build:$ARCH

BUILT=release/hb-store-cdn-cli-server
[ ! -f $BUILT ] && echo "Build failed" && exit 1

echo "Moving binary to RetroNAS bin dir..."
mkdir -p "${BINDIR}" 2>/dev/null
chmod +x $BUILT
mv -vf $BUILT "${BINDIR}"/

echo "Cleaning up..."
rm -rf "${SRCDIR}"

chown -R {{ retronas_user }}:{{ retronas_group }}  "${BINDIR}"/
echo "All done!"
